// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KirkDiggler/rpg-toolkit/mechanics/effects (interfaces: ResourceConsumer)
//
// Generated by this command:
//
//	mockgen -destination=mock/mock_resource_consumer.go -package=mock github.com/KirkDiggler/rpg-toolkit/mechanics/effects ResourceConsumer
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"

	events "github.com/KirkDiggler/rpg-toolkit/events"
	effects "github.com/KirkDiggler/rpg-toolkit/mechanics/effects"
)

// MockResourceConsumer is a mock of ResourceConsumer interface.
type MockResourceConsumer struct {
	ctrl     *gomock.Controller
	recorder *MockResourceConsumerMockRecorder
	isgomock struct{}
}

// MockResourceConsumerMockRecorder is the mock recorder for MockResourceConsumer.
type MockResourceConsumerMockRecorder struct {
	mock *MockResourceConsumer
}

// NewMockResourceConsumer creates a new mock instance.
func NewMockResourceConsumer(ctrl *gomock.Controller) *MockResourceConsumer {
	mock := &MockResourceConsumer{ctrl: ctrl}
	mock.recorder = &MockResourceConsumerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceConsumer) EXPECT() *MockResourceConsumerMockRecorder {
	return m.recorder
}

// ConsumeResources mocks base method.
func (m *MockResourceConsumer) ConsumeResources(ctx context.Context, bus events.EventBus) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConsumeResources", ctx, bus)
	ret0, _ := ret[0].(error)
	return ret0
}

// ConsumeResources indicates an expected call of ConsumeResources.
func (mr *MockResourceConsumerMockRecorder) ConsumeResources(ctx, bus any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConsumeResources", reflect.TypeOf((*MockResourceConsumer)(nil).ConsumeResources), ctx, bus)
}

// GetResourceRequirements mocks base method.
func (m *MockResourceConsumer) GetResourceRequirements() []effects.ResourceRequirement {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceRequirements")
	ret0, _ := ret[0].([]effects.ResourceRequirement)
	return ret0
}

// GetResourceRequirements indicates an expected call of GetResourceRequirements.
func (mr *MockResourceConsumerMockRecorder) GetResourceRequirements() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceRequirements", reflect.TypeOf((*MockResourceConsumer)(nil).GetResourceRequirements))
}
